#include <unistd.h>

static void	recursive_put(long n, char *base, int base_len)
{
	char	c;

	if (n >= base_len)
	{
		recursive_put((n / base_len), base, base_len);
	}
	c = base[n % base_len];
	write(1, &c, 1);
}

static int	ft_base_is_valid(char *base)
{
	int	len;
	int	i;
	int	j;

	len = 0;
	while (base[len] != '\0')
	{
		len = len + 1;
	}
	if (len < 2)
		return (0);
	i = 0;
	while (i < len)
	{
		if (base[i] == '+' || base[i] == '-')
			return (0);
		j = i + 1;
		while (j < len)
		{
			if (base[i] == base[j])
				return (0);
			j = j + 1;
		}
		i = i + 1;
	}
	return (len);
}

void	ft_putnbr_base(int nbr, char *base)
{
	int		base_len;
	long	n_long;

	base_len = ft_base_is_valid(base);
	if (base_len != 0)
	{
		n_long = nbr;
		if (n_long < 0)
		{
			write(1, "-", 1);
			n_long = -n_long;
		}
		recursive_put(n_long, base, base_len);
	}
}
